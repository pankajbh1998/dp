// min edit distance by pankaj
// dp[i-1][j-1]    replacement
// dp[i][j-1]      insertion  
// dp[i-1][j]      deletion
#include <bits/stdc++.h>
using namespace std;
typedef unsigned long long LL;
int n,m;
string s,ss;
int dp[1002][1002];
int min_edit_distance()
{
    for(int i=0;i<=n;i++)
        dp[i][0]=i;
    for(int j=0;j<=m;j++)
        dp[0][j]=j;
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=m;j++)
        {
            if(s[i-1]==ss[j-1])
                dp[i][j]=dp[i-1][j-1];
            else
                dp[i][j]=min(dp[i-1][j-1],min(dp[i-1][j],dp[i][j-1]))+1;
        }
    }
    return dp[n][m];
}
int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int t=1;
	//cin>>t;
	while(t--)
	{
	   cin>>n>>m;
	   cin>>s>>ss;
	   cout<<min_edit_distance()<<endl;
	}
	return 0;
}
