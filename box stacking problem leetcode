#include <bits/stdc++.h>
using namespace std;
#define fast int x = []() { std::ios::sync_with_stdio(false); cin.tie(NULL); return 0; }();
#define ll long long
#define LL unsigned ll
#define pb push_back
#define pi pair<int,int>
long double PI =3.14159265358979323846;
 
const ll M=1e9+7;
const ll inf=1e18;
const ll ms=2e5+1;
fast;

int Box_Stacking(vector<vector<int>> boxes)
{
    vector<vector<int>> ans;
    for(auto it:boxes)
    {
        sort(it.begin(),it.end(),[](int a,int b){return a>b;});
        ans.push_back(it);
        swap(it[0],it[1]);
        swap(it[1],it[2]);
        ans.push_back(it);
        swap(it[0],it[2]);
        ans.push_back(it);
    }
    sort(ans.begin(),ans.end(),
    [](const vector<int> a,const vector<int> b ){ 
        if(a[0]*a[1]==b[0]*b[1])  
            return a[1]>b[1];
        return a[0]*a[1]>b[0]*b[1];     });
    int n=ans.size();
    vector<int> height(n);
    int final=INT_MIN;
    for(int i=0;i<n;i++)
    {
        height[i]=ans[i][2];
        for(int j=0;j<i;j++)
        {
            if(ans[j][0]>ans[i][0]&&ans[j][1]>ans[i][1])
                height[i]=max(height[i],height[j]+ans[i][2]);
        }
        final=max(final,height[i]);
    }
    return final;
}
int main()
{
    int n;
    cin>>n;
    vector<vector<int>>vec;
    for(int i=0;i<n;i++)
    {
        vector<int>vc(3);
        for(int j=0;j<3;j++)
            cin>>vc[j];
        vec.push_back(vc);
    }
    cout<<Box_Stacking(vec);
    return 0;
}
