class Solution {
public:
    int maxCoins(vector<int>& nums) {
        int n=nums.size();
        if(n==0)
            return 0;
        int dp[n][n];
        for(int i=0;i<n;i++)
        {
            dp[i][i]=nums[i];
            if(i>0)
                dp[i][i]*=nums[i-1];
            if(i<n-1)
                dp[i][i]*=nums[i+1];
        }
        for(int i=1;i<n;i++)
        {
            for(int j=0;j+i<n;j++)
            {
                int maxi=0;
                dp[j][i+j]=0;
                for(int k=j;k<=i+j;k++)
                {
                    int every=0;
                    if(k!=j)
                        every+=dp[j][k-1];
                    if(k!=i+j)
                        every+=dp[k+1][i+j]; 
                    int chk=nums[k];
                    if(j>0)
                        chk*=nums[j-1];
                    if(i+j<n-1)
                        chk*=nums[j+i+1];
                    //cout<<chk<<" "<<every<<endl;
                    maxi=max(maxi,chk+every);
                }
                dp[j][i+j]=maxi;
               // cout<<endl;
            }
        }
       /* for(int i=0;i<n;i++)
        {
            for(int j=i;j<n;j++)
                    cout<<dp[i][j]<<" ";
            cout<<endl;
        }*/
        return dp[0][n-1];
    }
};
